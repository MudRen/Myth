// created 12/18/1997 by snowcat

inherit NPC;
inherit F_MASTER;
int rank_me();

void create()
{
  set_name("Å£Ä§Íõ", ({ "niumo wang", "niumo", "wang" }));
  set("title", "´óÁ¦Íõ");   
  set("long", "Ò»Î»Éí²Ä¿ýÎ°Á¦´óÎÞ±ÈµÄÄ§Íõ£¬Ò»Ë«Å£µ°ÑÛÕýÉ·ÉñÒ»°ãµÉ×ÅÄã¡£\n");
  set("gender", "ÄÐÐÔ");
  set("age", 70);
  set("attitude", "heroism");
  set("class", "yaomo");
  set("per", 10);
  set("str", 40);
  set("con", 30);
  set("max_kee", 1700);
  set("max_gin", 1700);
  set("max_sen", 1700);
  set("force", 1700);
  set("max_force", 1700);
  set("force_factor", 90);
  set("max_mana", 1700);
  set("mana", 1700);
  set("mana_factor", 45);
  set("combat_exp", 1250000);
  set("daoxing", 1500000);


  set_skill("spells", 180);
  set_skill("stick", 160);
  set_skill("dali-bang", 160);
  set_skill("unarmed", 160);
  set_skill("moyun-shou", 160);
  set_skill("dodge", 120);
  set_skill("moshenbu", 120);
  set_skill("parry", 160);
  set_skill("force", 180);
  set_skill("huomoforce", 160);
  set_skill("pingtian-dafa", 180);
  map_skill("force", "huomoforce");
  map_skill("spells", "pingtian-dafa");
  map_skill("stick", "dali-bang");
  map_skill("parry", "dali-bang");
  map_skill("unarmed", "moyun-shou");
  map_skill("dodge", "moshenbu");

  set("nb_heads",30);
  create_family("»ðÔÆ¶´", 2, "À¶");
        set("inquiry", ([
                "Ö°Î»": (: rank_me :),
]) );

  setup();
  carry_object("/d/obj/cloth/shoupiqun")->wear();
  call_out ("riding",1);
}

void attempt_apprentice(object ob)
{       ob=this_player();

        if( (string)ob->query("family/family_name") == "»ðÔÆ¶´") {

                if( (int)ob->query("max_mana") > 200 
                && (int)ob->query("max_force") > 200 ) {

                command("nod");
                command("recruit " + ob->query("id"));
                return ;
                }
        }
}

int recruit_apprentice(object ob)
{
        if( ::recruit_apprentice(ob) ) {
                ob->set("class", "yaomo");
                ob->set("title", "»ýÀ×É½Ä¦ÔÆ¶´Ð¡Ñý");
                ob->set("kusong/Teach_Niu", 1);
        }
}

void riding ()
{
  command ("mount jinjing shou");
}

void destruct_me (object me)
{
  destruct (me);
}

int check_heads (object me, object ob)
{
  int nb_heads = query("nb_heads")-1;
  object weapon;
  object head;

  me->set("nb_heads",nb_heads);
  if (! ob)
    return nb_heads;
  if (nb_heads <= 0)
    return nb_heads;

  weapon = ob->query_temp("weapon");

  if (! weapon)
    message_vision ("\n$N´óºÈÒ»ÉùÆËÏò$n£¬ÒÔÅÅÉ½µ¹º£Ö®ÊÆ½«$nµÄÅ£Í·°âÁËÏÂÀ´¡£\n",ob,me);
  else if (weapon->query("skill_type") == "axe")
    message_vision ("\n$N¸ß¸ß¾ÙÆð$n£¬ÅÅÉ½µ¹º£µØ´óºÈÒ»Éù£¬½«Å£Í·ÅüÁËÏÂÀ´¡£\n",ob,weapon);
  else if (weapon->query("skill_type") == "blade")
    message_vision ("\n$N¸ß¸ß¾ÙÆð$n£¬ÅÅÉ½µ¹º£µØ´óºÈÒ»Éù£¬½«Å£Í·¿³ÁËÏÂÀ´¡£\n",ob,weapon);
  else if (weapon->query("skill_type") == "sword")
    message_vision ("\n$N¸ß¸ß¾ÙÆð$n£¬ÅÅÉ½µ¹º£µØ´óºÈÒ»Éù£¬½«Å£Í·Ï÷ÁËÏÂÀ´¡£\n",ob,weapon);
  else if (weapon->query("skill_type") == "dagger")
    message_vision ("\n$N¸ß¸ß¾ÙÆð$n£¬ÅÅÉ½µ¹º£µØ´óºÈÒ»Éù£¬½«Å£Í·¸îÁËÏÂÀ´¡£\n",ob,weapon);
  else if (weapon->query("skill_type") == "fork")
    message_vision ("\n$N¸ß¸ß¾ÙÆð$n£¬ÅÅÉ½µ¹º£µØ´óºÈÒ»Éù£¬½«Å£Í·²æÁËÏÂÀ´¡£\n",ob,weapon);
  else if (weapon->query("skill_type") == "hammer")
    message_vision ("\n$N¸ß¸ß¾ÙÆð$n£¬ÅÅÉ½µ¹º£µØ´óºÈÒ»Éù£¬½«Å£Í·ÔÒÁËÏÂÀ´¡£\n",ob,weapon);
  else if (weapon->query("skill_type") == "spear")
    message_vision ("\n$N¸ß¸ß¾ÙÆð$n£¬ÅÅÉ½µ¹º£µØ´óºÈÒ»Éù£¬½«Å£Í·ÌôÁËÏÂÀ´¡£\n",ob,weapon);
  else if (weapon->query("skill_type") == "staff")
    message_vision ("\n$N¸ß¸ß¾ÙÆð$n£¬ÅÅÉ½µ¹º£µØ´óºÈÒ»Éù£¬½«Å£Í·É¨ÁËÏÂÀ´¡£\n",ob,weapon);
  else if (weapon->query("skill_type") == "stick")
    message_vision ("\n$N¸ß¸ß¾ÙÆð$n£¬ÅÅÉ½µ¹º£µØ´óºÈÒ»Éù£¬½«Å£Í·É¨ÁËÏÂÀ´¡£\n",ob,weapon);
  else if (weapon->query("skill_type") == "throwing")
    message_vision ("\n$N¸ß¸ß¾ÙÆð$n£¬ÅÅÉ½µ¹º£µØ´óºÈÒ»Éù£¬½«Å£Í·ÉäÁËÏÂÀ´¡£\n",ob,weapon);
  else if (weapon->query("skill_type") == "whip")
    message_vision ("\n$N¸ß¸ß¾ÙÆð$n£¬ÅÅÉ½µ¹º£µØ´óºÈÒ»Éù£¬½«Å£Í·³éÁËÏÂÀ´¡£\n",ob,weapon);
  else if (weapon->query("skill_type") == "mace")
    message_vision ("\n$N¸ß¸ß¾ÙÆð$n£¬ÅÅÉ½µ¹º£µØ´óºÈÒ»Éù£¬½«Å£Í·³éÁËÏÂÀ´¡£\n",ob,weapon);
  else
    message_vision ("\n$N´óºÈÒ»ÉùÆËÏò$n£¬ÒÔÅÅÉ½µ¹º£Ö®ÊÆ½«$nµÄÅ£Í·°âÁËÏÂÀ´¡£\n",ob,me);
  
  head = new ("/d/qujing/jilei/obj/head");
  head->move(environment(me));
  return nb_heads;
}

void die ()
{
  object me = this_object();
  object ob = query_temp("last_damage_from");
  object killer=query_temp("my_killer");
  object last =query_temp("last_killed_by");
  string faint=query_temp("last_fainted_from");
 
  // mon 10/3/98
  if(faint && ob) {
      if(faint!=ob->query("id"))
	  set("nb_heads",40); // someone else help, reset count.
  }
  delete_temp("last_fainted_from");
  if(killer!=ob)
      set("nb_heads",40); // someone else help, reset count.

  // mon 7/30/98
  // to prevent other players help to kill niu.
  if(!last) last=ob;
  else if(last!=ob)
      set("nb_heads",40); // someone else help, reset count.
  
  set_temp("last_killed_by",ob);

  if (check_heads (me, ob) > 0)
  {
    set("kee", 1700);
    set("gin", 1700);
    set("sen", 1700);
    set("eff_kee", 1700);
    set("eff_gin", 1700);
    set("eff_sen", 1700);
    set("force", 1700);
    set("mana", 1700);
    message_vision ("\nÖ»¼ûÅ£Ç»ÀïÒ¡Ò¡»Î»ÎÓÖ×ê³öÒ»¸öÅ£Í·À´£¡\n",me);
    if (ob)
      message_vision ("\n$N¾«Éñ¶¶ËÓµØÓÖÏò$n·¢Æð¹¥»÷£¡\n",me,ob);
    return;
  }

  if (ob)
  {
    ob->set_temp("obstacle/jilei_niumo_killed",1);
    call_out ("li_appearing",1,ob);
  }
  message_vision ("\nÌìÉÏÍÐËþÀîÌìÍõ´óºðÒ»Éù£ºÅ£Ä§¹é·ðÒ²£¡\n",me);
  message_vision ("\n$NÎÅÉùÈíÁËÏÂÀ´£¬»¹Ô­³ÉÒ»Ö»´ó°×Å££¬´­×ÅÈÈÆø¡£\n",me);
  message_vision ("ÀîÌìÍõ×ß¹ýÀ´£¬ÓÃ½ðÁ´Ë©ÔÚÅ£±Ç×ÓÉÏ£¬½«$NÇ£×ßÁË¡£\n",me);
  load_object("/obj/empty");
  me->move("/obj/empty");
  call_out ("destruct_me",3,me);
}

void li_appearing (object who)
{
  object li = new ("/d/qujing/jilei/npc/li");

  li->announce_success (who);
  destruct (li); 
}

void unconcious ()
{
  die ();
}

int accept_fight(object ob)
{
  ob->apply_condition("killer", 100);
  kill_ob(ob);
  ob->kill_ob(this_object());
  return 1;
}

int test_player (object who)
{
  string *names;
  string name;

  names = who->query_temp("apply/name");
  if (! names)
    return 0;

  if (sizeof(names) < 1)
    return 0;

  name = names[0];

  if (name == "ÌúÉÈ¹«Ö÷")
    return 1;
//  if (name == "ÓñÃæ¹«Ö÷")
//    return 1;
  return 0;
}

void kill_ob (object ob)
{
  object me = this_object();
  object where = environment (me);
  object yumian = present ("yumian gongzhu", where);

  if (! test_player (ob))
  {
    message_vision ("$NÒ»Ë«Å£µ°ÑÛµÉ×ÅÄã£¬´óºðÒ»Éù£ºÄã£¡Äã£¡¹ö£¡\n",me);
    message_vision ("$NÏÖÁË´ó°×Å£µÄÔ­ÐÎÏò$nÆËÀ´£¬·è¿ñµØµÍÍ·Ò»¶¥£¡\n",me,ob);
    message_vision ("$NÒ»¸ö´ëÊÖ²»¼°£¬Áè¿Õ·ÉÆð£¡\n",ob);
    ob->move("/d/qujing/jilei/shidong");
    message_vision ("¡°ºä¡±µØ$NË¤½«ÏÂÀ´£¡\n",ob);
    ob->unconcious();
    return;
  }
  message_vision ("\n$N´óÅ­£ºÄÄ¸öÆÃÔô×ÓÃ°³ä°³»ë¼Ò£¡\n",me);

  set_temp("my_killer",ob);
  call_out ("checking",1,me,ob);  
  ::kill_ob(ob);
  if (yumian && (! interactive(yumian)) && !yumian->is_fighting())
    yumian->kill_ob(ob);
}

void checking (object me, object ob)
{
  object fabao = present ("fabao",me);

  if (me->is_fighting())
  {
    remove_call_out ("checking");  
    call_out ("checking",1,me,ob);  
  }
  else
  {
    int i = 45 - ob->query("kar");

    if (i < 10)
      i = 10;
    me->set("nb_heads",i+random(10));
  }
}


int rank_me()
{
        object me=this_player();
        int exp;
        exp=(int)me->query("combat_exp");

        if( (string)me->query("family/family_name") == "»ðÔÆ¶´"
        && (string)me->query("family/master_id") == "niumo wang"){


                if( exp <= 10000 ){
                        me->set("title", "»ýÀ×É½Ä¦ÔÆ¶´Ñ²É½Ð¡Ñý");
                } else if(exp <= 50000 ){
                        me->set("title", "»ýÀ×É½Ä¦ÔÆ¶´ÏÈ·æ");
                } else if(exp < 100000 ){
                        me->set("title", "»ýÀ×É½Ä¦ÔÆ¶´½¡½«");
                } else if(exp <= 250000 ){
                        me->set("title", "»ýÀ×É½Ä¦ÔÆ¶´Ñ²É½´ó½«");
                } else if(exp <= 500000 ){
                        me->set("title", "»ýÀ×É½Ä¦ÔÆ¶´ÑýÍõ");
                } else if(exp <= 1000000 ){
                        me->set("title", "»ýÀ×É½Ä¦ÔÆ¶´Ä§Íõ");
                } else if(exp <= 1500000 ){
                        me->set("title", "»ýÀ×É½Ä¦ÔÆ¶´³¤ÀÏ");
                } else {
                        me->set("title", "»ýÀ×É½Ä¦ÔÆ¶´¶´Ö÷");
                }

                tell_object(me, "Å£Ä§Íõ¶ÔÄãËµ£ºÄã¿ÉÒÔ×ö"+me->query("title")+"¡£\n");
                tell_room(environment(me),
"Å£Ä§Íõ¶Ô"+me->query("name")+"Ëµ£ºÄã¿ÉÒÔ×ö"+me->query("title")+"¡£\n", ({me, me}));

        }
        return 1;
}

ÿ